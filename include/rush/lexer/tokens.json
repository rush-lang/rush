{
	"types": [
		{ "name": "void", "description": "void (no type)" },
		{ "name": "bool", "description": "a boolean" },
		{ "name": "byte", "description": "a byte" },
		{ "name": "sbyte", "description": "a signed byte" },
		{ "name": "short", "description": "a 16-bit integer" },
		{ "name": "ushort", "description": "a unsigned 16-bit integer" },
		{ "name": "int", "description": "a 32-bit integer" },
		{ "name": "uint", "description": "a 32-bit unsigned integer" },
		{ "name": "long", "description": "a 64-bit integer" },
		{ "name": "ulong", "description": "a 64-bit unsigned integer" },
		{ "name": "float", "description": "a 32-bit floating point" },
		{ "name": "double", "description": "a 64-bit floating point" },
		{ "name": "string", "description": "a string" },
		{ "name": "char", "description": "a character" }
	],

	"keywords": [
		{ "name": "nil", "description": "the nil" },
		{ "name": "alias", "description": "the alias" },
		{ "name": "var", "description": "the var" },
		{ "name": "let", "description": "the let" },
		{ "name": "const", "description": "the const" },
      { "name": "func", "description": "the func" },
      { "name": "async", "description": "the async", "contextual": true },
      { "name": "await", "description": "the await" },
      { "name": "operator", "description": "the operator", "contextual": true },
      { "name": "construct", "description": "the construct", "contextual": true },
		{ "name": "if", "description": "the if" },
		{ "name": "else", "description": "the else" },
		{ "name": "switch", "description": "the switch" },
		{ "name": "case", "description": "the case" },
		{ "name": "for", "description": "the for" },
		{ "name": "while", "description": "the while" },
		{ "name": "with", "description": "the with" },
		{ "name": "in", "description": "the in", "contextual": true },
		{ "name": "get", "description": "the get", "contextual": true },
		{ "name": "set", "description": "the set", "contextual": true },
		{ "name": "try", "description": "the try" },
		{ "name": "catch", "description": "the catch" },
		{ "name": "finally", "description": "the finally" },
		{ "name": "throw", "description": "the throw" },
		{ "name": "new", "description": "the new" },
		{ "name": "enum", "description": "the enum" },
		{ "name": "struct", "description": "the struct" },
		{ "name": "class", "description": "the class" },
		{ "name": "trait", "description": "the trait" },
		{ "name": "where", "description": "the where" },
		{ "name": "import", "description": "the import", "contextual": true },
		{ "name": "export", "description": "the export", "contextual": true },
		{ "name": "extern", "description": "the extern", "contextual": true },
		{ "name": "module", "description": "the module", "contextual": true },
		{ "name": "base", "description": "the base", "contextual": true },
		{ "name": "this", "description": "the this", "contextual": true },
		{ "name": "break", "description": "the break" },
		{ "name": "continue", "description": "the continue" },
		{ "name": "public", "description": "the public" },
		{ "name": "private", "description": "the private" },
      { "name": "protected", "description": "the protected" },
      { "name": "internal", "description": "the internal" },
		{ "name": "virtual", "description": "the virtual" },
		{ "name": "abstract", "description": "the abstract" },
		{ "name": "override", "description": "the override" },
		{ "name": "explicit", "description": "the explicit" },
		{ "name": "implicit", "description": "the implicit" },
		{ "name": "static", "description": "the static" },
		{ "name": "return", "description": "the return" },
		{ "name": "yield", "description": "the yield" },
		{ "name": "as", "description": "the as" },
		{ "name": "is", "description": "the is" },
		{ "name": "true", "description": "the true" },
		{ "name": "false", "description": "the false" },
		{ "name": "typeof", "description": "the typeof" },
      { "name": "sizeof", "description": "the sizeof" },
      { "name": "pass", "description": "the pass" }
	],

	"symbols": [
      { "name": "eof", "symbol": "\\x00", "description": "an end-of-file" },
      { "name": "lbreak", "symbol": "\\x0D", "description": "a line break" },
		{ "name": "indent", "symbol": "\\x0E", "description": "an indentation" },
		{ "name": "dedent", "symbol": "\\x0F", "description": "a de-indentation" },
		{ "symbol": ",", "name": "comma", "description": "a comma" },
		{ "symbol": "@", "name": "ampersat", "description": "an at-sign" },
		{
         "symbol": "~",
         "name": "tilde",
         "description": "a tilde",
         "compounded": [
            { "name": "tilde_caret", "symbol": "^" },
            { "name": "tilde_ampersand", "symbol": "&" },
            { "name": "tilde_pipe", "symbol": "|" },
            { "name": "tilde_exclamation", "symbol": "!" },
            { "name": "tilde_caret_equals", "symbol": "^=" },
            { "name": "tilde_ampersand_equals", "symbol": "&=" },
            { "name": "tilde_pipe_equals", "symbol": "|=" },
            { "name": "tilde_exclamation_equals", "symbol": "!=" }
         ]
      },
		{
			"symbol": ".",
			"name": "period",
			"description": "a period/dot",
			"compounded": [
				{ "name": "ellipses", "symbol": ".." },
				{ "name": "ellipses_caret", "symbol": ".^" }
			]
		},
		{
			"symbol": "&",
			"name": "ampersand",
			"description": "an ampersand",
			"compounded": [
				{ "name": "double_ampersand", "symbol": "&" },
				{ "name": "ampersand_equals", "symbol": "=" }
			]
		},
		{
			"symbol": "+",
			"name": "plus",
			"description": "a plus",
			"compounded": [
				{ "name": "plus_plus", "symbol": "+" },
				{ "name": "plus_equals", "symbol": "=" }
			]
		},
		{
			"symbol": "-",
			"name": "minus",
			"description": "a minus/hypen",
			"compounded": [
            { "name": "thin_arrow", "symbol": ">" },
				{ "name": "minus_minus", "symbol": "-" },
				{ "name": "minus_equals", "symbol": "=" }
			]
		},
		{
			"symbol": "*",
			"name": "asterisk",
			"description": "an asterisk",
			"compounded": [
				{ "name": "asterisk_equals", "symbol": "=" }
			]
		},
		{
			"symbol": "%",
			"name": "percent",
			"description": "a percent",
			"compounded": [
				{ "name": "percent_equals", "symbol": "=" }
			]
		},
		{
			"symbol": "=",
			"name": "equals",
			"description": "an equals",
			"compounded": [
				{ "name": "thick_arrow", "symbol": ">" },
				{ "name": "equals_equals", "symbol": "=" }
			]
		},
		{
			"symbol": "|",
			"name": "pipe",
			"description": "a pipe",
			"compounded": [
				{ "name": "double_pipe", "symbol": "|" },
				{ "name": "pipe_equals", "symbol": "=" }
			]
      },
      {
         "symbol": "^",
			"name": "caret",
			"description": "a caret",
			"compounded": [
				{ "name": "caret_equals", "symbol": "=" }
			]
      },
		{ "symbol": "$", "name": "dollar", "description": "a dollar" },
		{ "symbol": "\\\"", "name": "quote", "description": "a quotation mark"  },
		{ "symbol": "\\'", "name": "apostrophe", "description": "an apostrophe" },
		{ "symbol": "?", "name": "question_mark", "description": "a question mark" },
		{
			"symbol": "!",
			"name": "exclamation_mark",
			"description": "an exclamation mark",
			"compounded": [
				{ "symbol": "=", "name": "exclamation_mark_equals" }
			]
		},
		{ "symbol": "\\\\", "name": "back_slash", "description": "a back-slash"  },
		{
			"symbol": "/",
			"name": "forward_slash",
			"description": "a forward slash",
			"compounded": [
				{ "symbol": "=", "name": "forward_slash_equals" }
			]
		},
		{
         "symbol": ":",
         "name": "colon",
         "description": "a colon" ,
         "compounded": [
            { "symbol": ":", "name": "double_colon" },
            { "symbol": "=", "name": "colon_equals" }
         ]
      },
		{ "symbol": ";", "name": "semi_colon", "description": "a semi-colon" },
		{ "symbol": "(", "name": "left_parenthesis", "description": "left round bracket" },
		{ "symbol": ")", "name": "right_parenthesis", "description": "right round bracket" },
		{ "symbol": "{", "name": "left_brace", "description": "left curly bracket" },
		{ "symbol": "}", "name": "right_brace", "description": "right curly bracket" },
		{
			"symbol": "<",
			"name": "left_chevron",
			"description": "left chevron",
			"compounded":[
				{ "symbol": "=", "name": "left_chevron_equals" },
            { "symbol": "<", "name": "double_left_chevron" },
            { "symbol": "<=", "name": "double_left_chevron_equals" }
			]
		},
		{
         "symbol": ">",
			"name": "right_chevron",
			"description": "right chevron",
			"compounded": [
				{ "symbol": "=", "name": "right_chevron_equals" },
            { "symbol": ">", "name": "double_right_chevron" },
            { "symbol": ">=", "name": "double_right_chevron_equals" }
			]
		},
		{ "symbol": "[", "name": "left_bracket", "description": "left square bracket" },
		{ "symbol": "]", "name": "right_bracket", "description": "right square bracket" },
		{ "symbol": "_", "name": "underscore", "description": "an underscore" }
	]
}
