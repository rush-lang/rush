import std.os

export func       read(istr: istream) => noop
export async func read(istr: istream) => noop
export func       readln(istr: istream) => noop
export async func readln(istr: istream) => noop

export func       write(ostr: ostream, ...args: formattable) => noop
export async func write(ostr: ostream, ...args: formattable) => noop

export func writeln(ostr: ostream, ...args: formattable)
   write(ostr, ...args)
   write(ostr, os.newline)

export async func writeln(ostr: ostream, ...args: formattable):
   await write(ostr, ...args)
   await write(ostr, os.newline)

export func       writef(ostr: ostream, fmt: string, ...args: formattable | string_formattable) => noop
export async func writef(ostr: ostream, fmt: string, ...args: formattable | string_formattable) => noop

export func writefn(ostr: ostream, fmt: string, ...args: formattable | string_formattable):
   writef(ostr, fmt, ...args)
   write(ostr, os.newline)

export async func writefn(ostr: ostream, fmt: string, ...args: formattable | string_formattable):
   await writef(ostr, fmt, ...args)
   await write(ostr, os.newline)

export func       scan() => read(os.stdin)
export async func scan() => read(os.stdin)

export func       scanln() => readln(os.stdin)
export async func scanln() => readln(os.stdin)

export func       print(...args: string | formattable) => write(os.stdout, ...args)
export async func print(...args: string | formattable) => write(os.stdout, ...args)

export func       println(...args: string | formattable) => writeln(os.stdout, ...args)
export async func println(...args: string | formattable) => writeln(os.stdout, ...args)

export func       printf(fmt: string, ...args: string | formattable | string.formattable) => writef(os.stdout, fmt, ...args)
export async func printf(fmt: string, ...args: string | formattable | string.formattable) => writef(os.stdout, fmt, ...args)

export func       printfn(fmt: string, ...args: string | formattable | string.formattable) => writefn(os.stdout, fmt, ...args)
export async func printfn(fmt: string, ...args: string | formattable | string.formattable) => writefn(os.stdout, fmt, ...args)

